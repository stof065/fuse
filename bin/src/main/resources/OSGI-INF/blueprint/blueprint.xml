<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:camel-cxf="http://camel.apache.org/schema/blueprint/cxf"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:cxfcore="http://cxf.apache.org/blueprint/core" xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
	 xmlns:jpa="http://aries.apache.org/xmlns/jpa/v2.0.0" xmlns:tx="http://aries.apache.org/xmlns/transactions/v1.2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd  
	    http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd 
	         http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd ">
	<cm:property-placeholder
		id="property-placeholder-8a5986bd-5c0b-46e8-9701-727ece5147a1"
		persistent-id="HelloBean">
		<cm:default-properties>
			<cm:property name="greeting" value="Hi from Camel" />
			<cm:property name="broker_url" value="tcp://localhost:61616" />
		</cm:default-properties>
	</cm:property-placeholder>
	<camel-cxf:rsServer address="/serverMessage" id="messageServerEndpoint"
		serviceClass="sample.bean.rest.MessageRestController" />
	<jaxrs:server address="/messages" id="customerService">
		<jaxrs:serviceBeans>
			<ref component-id="messageRestController" />
		</jaxrs:serviceBeans>
	</jaxrs:server>
	
	<bean class="sample.bean.rest.MessageRestController" id="messageRestController" />
	<bean class="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" id="mysqlDatasource">
		<property name="serverName" value="localhost" />
		<property name="databaseName" value="osgi" />
		<property name="port" value="3306" />
		<property name="user" value="root" />
		<property name="password" value="root" />
	</bean>
	<bean class="sample.bean.processor.RouteProcessor" id="routeProcessor" />
	<bean class="sample.bean.processor.TimerProcessor" id="timerProcessor" />
	<bean class="sample.bean.processor.ProcessingBean" id="processingBean"
		init-method="startingBean">
		<property name="dataSource" ref="mysqlDatasource" />
		<property name="dummyRepository" ref="dummyRepository" />
	</bean>
	<bean class="org.apache.activemq.ActiveMQConnectionFactory" id="jmsConnectionFactory">
		<property name="brokerURL" value="${broker_url}" />
		<property name="userName" value="admin" />
		<property name="password" value="abourouh" />
	</bean>
	<bean class="org.apache.activemq.camel.component.ActiveMQComponent"
		id="activemq">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<bean id="dummyRepository" class="sample.bean.repository.DummyRepository"
		init-method="init">
	</bean>
	
	  <service id="mysqlDS" interface="javax.sql.DataSource" ref="mysqlDatasource">
        <service-properties>
            <entry key="osgi.jndi.service.name" value="jdbc/osgidb"/>
        </service-properties>
    </service>


	<camelContext id="myContext"
		xmlns="http://camel.apache.org/schema/blueprint">
		<route id="routRest">
			<from id="restEndpoint" uri="cxfrs:bean:messageServerEndpoint" />
			<process id="restRouteProcessor" ref="routeProcessor" />
			<log id="_log2" message="this is recieved message ${body}" />
			<convertBodyTo id="_convertBodyTo1" type="java.lang.String" />
			<removeHeaders id="_removeHeaders1" pattern="*" />
			<setBody id="_setBody1">
				<simple>
			message recieved from rest endpoint :	${body}
			</simple>
			</setBody>
			<log id="_log3" message="the new header ${headers}" />
			<to id="_to2" uri="activemq:input" />
		</route>
		<route id="linkingroute">
			<from id="_from2" uri="timer://fetch?fixedRate=true&amp;period=8000" />
			<log id="_log4" message="started period in timer fetch" />
			<process id="_process1" ref="timerProcessor" />
			<to id="_to3" uri="activemq:input" />
		</route>
		<route id="queue">
			<!-- <bean id="processorBean" ref="processingBean" method="process"/> -->
			<from id="_from1" uri="activemq:input" />
			<process id="dbprocessor" ref="processingBean">
				<description>processor to store message in db</description>
			</process>
			<log id="_log1" message="The message recieved ${body}" />
			<to id="_to1" uri="activemq:output" />
		</route>
	</camelContext>
</blueprint>
